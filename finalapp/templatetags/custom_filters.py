from django import template

register = template.Library()

# Map р╣Ар╕Фр╕╖р╕нр╕Щр╣Ар╕Ыр╣Зр╕Щр╕ар╕▓р╕йр╕▓р╣Др╕Чр╕в
MONTHS_THAI = {
    1: "р╕бр╕Бр╕гр╕▓р╕Др╕б",
    2: "р╕Бр╕╕р╕бр╕ар╕▓р╕Юр╕▒р╕Щр╕Шр╣М",
    3: "р╕бр╕╡р╕Щр╕▓р╕Др╕б",
    4: "р╣Ар╕бр╕йр╕▓р╕вр╕Щ",
    5: "р╕Юр╕др╕йр╕ар╕▓р╕Др╕б",
    6: "р╕бр╕┤р╕Цр╕╕р╕Щр╕▓р╕вр╕Щ",
    7: "р╕Бр╕гр╕Бр╕Ор╕▓р╕Др╕б",
    8: "р╕кр╕┤р╕Зр╕лр╕▓р╕Др╕б",
    9: "р╕Бр╕▒р╕Щр╕вр╕▓р╕вр╕Щ",
    10: "р╕Хр╕╕р╕ер╕▓р╕Др╕б",
    11: "р╕Юр╕др╕ир╕Ир╕┤р╕Бр╕▓р╕вр╕Щ",
    12: "р╕Шр╕▒р╕Щр╕зр╕▓р╕Др╕б"
}

@register.filter
def thai_month_year(value):
    """ р╣Бр╕Ыр╕ер╕З '2025-05' р╣Ар╕Ыр╣Зр╕Щ 'р╕Юр╕др╕йр╕ар╕▓р╕Др╕б 2025' """
    if not value:
        return ""
    try:
        year, month = map(int, str(value).split('-'))
        return f"{MONTHS_THAI.get(month, '')} {year}"
    except (ValueError, AttributeError):
        return value

FACILITY_MAP = {
    'bed': 'ЁЯЫП р╣Ар╕Хр╕╡р╕вр╕З',
    'wifi': 'ЁЯУ╢ Wi-Fi',
    'water_heater': 'ЁЯЪ┐ р╣Ар╕Др╕гр╕╖р╣Ир╕нр╕Зр╕Чр╕│р╕Щр╣Йр╕│р╕нр╕╕р╣Ир╕Щ',
    'parking': 'ЁЯЕ┐я╕П р╕Чр╕╡р╣Ир╕Ир╕нр╕Фр╕гр╕Ц',
    'kettle': 'тШХ р╕Бр╕▓р╕Щр╣Йр╕│р╕гр╣Йр╕нр╕Щ',
    'kitchen': 'ЁЯН│ р╕Др╕гр╕▒р╕з/р╣Др╕бр╣Вр╕Др╕гр╣Ар╕зр╕Я',
    'balcony': 'ЁЯМЕ р╕гр╕░р╣Ар╕Ър╕╡р╕вр╕З',
    'no_smoking': 'ЁЯЪн р╕лр╣Йр╕▓р╕бр╕кр╕╣р╕Ър╕Ър╕╕р╕лр╕гр╕╡р╣И',
    'smoking_area': 'ЁЯЪм р╕кр╕╣р╕Ър╕Ър╕╕р╕лр╕гр╕╡р╣И (р╕ар╕▓р╕вр╕Щр╕нр╕Б)',
    'pet_allowed': 'ЁЯР╢ЁЯР▒ р╕Щр╕│р╕кр╕▒р╕Хр╕зр╣Мр╣Ар╕ер╕╡р╣Йр╕вр╕Зр╣Ар╕Вр╣Йр╕▓р╣Др╕Фр╣Й',
    'fridge': 'ЁЯзК р╕Хр╕╣р╣Йр╣Ар╕вр╣Зр╕Щ',
}

@register.filter
def facility_label(code):
    """ р╣Бр╕Ыр╕ер╕Зр╕гр╕лр╕▒р╕кр╕кр╕┤р╣Ир╕Зр╕нр╕│р╕Щр╕зр╕вр╕Др╕зр╕▓р╕бр╕кр╕░р╕Фр╕зр╕Бр╣Ар╕Ыр╣Зр╕Щр╕Кр╕╖р╣Ир╕нр╕Юр╕гр╣Йр╕нр╕бр╕нр╕╡р╣Вр╕бр╕Ир╕┤ """
    return FACILITY_MAP.get(code, code)