version: '3.9'

services:
  traefik:
    image: traefik:v3.1
    command:
      - "--api.insecure=true"         # üëà ‡πÄ‡∏õ‡∏¥‡∏î dashboard ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà secure (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö dev ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"   # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/acme.json:/letsencrypt/acme.json

  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  web:
    build: .
    command: >
      sh -c "
        echo 'Waiting for db...' &&
        while ! nc -z db 5432; do sleep 1; done &&
        echo 'DB is up!' &&
        python manage.py migrate &&
        gunicorn --bind 0.0.0.0:10635 finalpj.wsgi:application
      "
    volumes:
      - .:/app
    depends_on:
      - db
    env_file:
      - .env
    restart: always
    ports:
      - "${EXTERNAL_WEB_PORT}:10635"    # ‚úÖ expose ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ï‡∏£‡∏á‡πÑ‡∏î‡πâ‡∏î‡πâ‡∏ß‡∏¢
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`example.com`)"  # üîÅ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô domain ‡∏à‡∏£‡∏¥‡∏á
      - "traefik.http.routers.django.entrypoints=web"
      - "traefik.http.services.django.loadbalancer.server.port=10635"

volumes:
  postgres_data:
