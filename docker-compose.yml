version: "3.9"

services:
  traefik:
    image: traefik:v3.1
    command:
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.file.directory=/etc/traefik/dynamic"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/acme.json:/letsencrypt/acme.json
      - ./tls.yml:/etc/traefik/dynamic/tls.yml:ro
      - ./local.crt:/etc/traefik/certs/cert.pem:ro
      - ./local.key:/etc/traefik/certs/key.pem:ro

  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  web:
    build: .
    command: >
      sh -c "
        echo 'Waiting for db...' &&
        while ! nc -z db 5432; do sleep 1; done &&
        echo 'DB is up!' &&
        python manage.py migrate &&
        gunicorn --bind 0.0.0.0:10635 finalpj.wsgi:application
      "
    volumes:
      - .:/app
      - media:/app/media
    depends_on:
      - db
    env_file:
      - .env
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`10.80.21.9`) && PathPrefix(`/s65114540635`)"
      - "traefik.http.routers.django.entrypoints=web"
      - "traefik.http.services.django.loadbalancer.server.port=10635"
      - "traefik.http.routers.django.priority=10"
      - "traefik.http.middlewares.strip-django.stripprefix.prefixes=/s65114540635"
      - "traefik.http.routers.django.middlewares=strip-django"

  media:
    build: ./media-server
    volumes:
      - media:/data:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.media.rule=Host(`10.80.21.9`) && PathPrefix(`/s65114540635/media`)"
      - "traefik.http.routers.media.entrypoints=web"
      - "traefik.http.routers.media.priority=100"
      - "traefik.http.services.media.loadbalancer.server.port=8000"
      - "traefik.http.middlewares.strip-media.stripprefix.prefixes=/s65114540635"
      - "traefik.http.routers.media.middlewares=strip-media"

volumes:
  postgres_data:
  media:
